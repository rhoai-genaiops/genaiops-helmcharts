{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "description": "Number of replicas for the deployment"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "tag", "pullPolicy"]
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "description": "Image pull secrets"
    },
    "nameOverride": {
      "type": "string",
      "description": "Override the name of the chart"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override the full name of the chart"
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Create a service account"
        },
        "annotations": {
          "type": "object",
          "description": "Service account annotations"
        },
        "name": {
          "type": "string",
          "description": "Service account name"
        }
      },
      "required": ["create"]
    },
    "podAnnotations": {
      "type": "object",
      "description": "Pod annotations"
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {
        "runAsNonRoot": {
          "type": "boolean"
        },
        "fsGroup": {
          "type": "integer"
        }
      },
      "description": "Pod security context"
    },
    "securityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "drop": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer"
        },
        "runAsGroup": {
          "type": "integer"
        }
      },
      "description": "Container security context"
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
          "description": "Service type"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Service port"
        },
        "targetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Container port"
        },
        "annotations": {
          "type": "object",
          "description": "Service annotations"
        }
      },
      "required": ["type", "port", "targetPort"]
    },
    "route": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OpenShift route"
        },
        "annotations": {
          "type": "object",
          "description": "Route annotations"
        },
        "host": {
          "type": "string",
          "description": "Route hostname"
        },
        "tls": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "termination": {
              "type": "string",
              "enum": ["edge", "passthrough", "reencrypt"]
            },
            "insecureEdgeTerminationPolicy": {
              "type": "string",
              "enum": ["Allow", "Redirect", "None"]
            }
          }
        }
      },
      "required": ["enabled"]
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable ingress"
        },
        "className": {
          "type": "string",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "description": "Ingress annotations"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "pathType": {
                      "type": "string",
                      "enum": ["Exact", "Prefix", "ImplementationSpecific"]
                    }
                  }
                }
              }
            }
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "secretName": {
                "type": "string"
              },
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "required": ["enabled"]
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+m?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Mi|Gi)$"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+m?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Mi|Gi)$"
            }
          }
        }
      },
      "description": "Resource limits and requests"
    },
    "livenessProbe": {
      "type": "object",
      "properties": {
        "httpGet": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "port": {
              "type": "string"
            }
          }
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1
        }
      },
      "description": "Liveness probe configuration"
    },
    "readinessProbe": {
      "type": "object",
      "properties": {
        "httpGet": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "port": {
              "type": "string"
            }
          }
        },
        "initialDelaySeconds": {
          "type": "integer",
          "minimum": 0
        },
        "periodSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "timeoutSeconds": {
          "type": "integer",
          "minimum": 1
        },
        "failureThreshold": {
          "type": "integer",
          "minimum": 1
        }
      },
      "description": "Readiness probe configuration"
    },
    "autoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable horizontal pod autoscaling"
        },
        "minReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Minimum number of replicas"
        },
        "maxReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of replicas"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Target CPU utilization percentage"
        }
      },
      "required": ["enabled"]
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector for pod assignment"
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "Tolerations for pod assignment"
    },
    "affinity": {
      "type": "object",
      "description": "Affinity rules for pod assignment"
    },
    "playground": {
      "type": "object",
      "properties": {
        "llamaStackUrl": {
          "type": "string",
          "format": "uri",
          "description": "Llama Stack backend URL"
        },
        "defaultModel": {
          "type": "string",
          "description": "Default model to use"
        },
        "enableChat": {
          "type": "boolean",
          "description": "Enable chat functionality"
        },
        "enableAgents": {
          "type": "boolean",
          "description": "Enable agents functionality"
        },
        "enableTools": {
          "type": "boolean",
          "description": "Enable tools functionality"
        }
      },
      "required": ["llamaStackUrl", "defaultModel"]
    },
    "env": {
      "type": "object",
      "properties": {
        "STREAMLIT_SERVER_PORT": {
          "type": "string",
          "pattern": "^[0-9]+$"
        },
        "STREAMLIT_SERVER_ADDRESS": {
          "type": "string"
        },
        "STREAMLIT_BROWSER_GATHER_USAGE_STATS": {
          "type": "string",
          "enum": ["true", "false"]
        }
      },
      "description": "Environment variables"
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable network policies"
        },
        "ingress": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "egress": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": ["enabled"]
    },
    "podDisruptionBudget": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable pod disruption budget"
        },
        "minAvailable": {
          "type": "integer",
          "minimum": 1,
          "description": "Minimum available pods"
        }
      },
      "required": ["enabled"]
    }
  },
  "required": [
    "replicaCount",
    "image",
    "serviceAccount",
    "service",
    "route",
    "ingress",
    "autoscaling",
    "playground",
    "networkPolicy",
    "podDisruptionBudget"
  ]
}